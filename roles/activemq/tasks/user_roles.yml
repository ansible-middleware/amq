---
- name: Retrieve existing users
  ansible.builtin.slurp:
    src: "{{ activemq.instance_home }}/etc/artemis-users.properties"
  register: existing_users
  become: yes

- name: Set masked user passwords
  ansible.builtin.include_tasks: mask_password.yml
  loop: "{{ activemq_users }}"
  loop_control:
    label: "{{ item.user }}"

- name: Configure users
  ansible.builtin.template:
    src: artemis-users.properties.j2
    dest: "{{ activemq.instance_home }}/etc/artemis-users.properties"
    owner: "{{ activemq_service_user }}"
    group: "{{ activemq_service_group }}"
    mode: 0640
  no_log: True
  become: yes

- name: Configure roles
  ansible.builtin.template:
    src: artemis-roles.properties.j2
    dest: "{{ activemq.instance_home }}/etc/artemis-roles.properties"
    owner: "{{ activemq_service_user }}"
    group: "{{ activemq_service_group }}"
    mode: 0640
  become: yes

- name: Create security settings
  ansible.builtin.set_fact:
    security_settings: "{{ security_settings | default([]) + [ lookup('template', 'security_settings.broker.xml.j2') ] }}"
  loop: "{{ activemq_roles }}"

- name: Create messaging roles permissions
  xml:
    path: "{{ activemq.instance_home }}/etc/broker.xml"
    xpath: /conf:configuration/core:core/core:security-settings
    input_type: xml
    set_children: "{{ security_settings }}"
    namespaces:
      conf: urn:activemq
      core: urn:activemq:core
    pretty_print: yes
  become: yes

- name: "Update hawtio role"
  ansible.builtin.lineinfile:
    path: "{{ activemq.instance_home }}/etc/artemis.profile"
    regexp: '^HAWTIO_ROLE=.*'
    line: "HAWTIO_ROLE='{{ activemq_hawtio_role }}'"
  become: yes
  notify:
    - restart amq_broker