---
# - name: Validate password strength
#   ansible.builtin.assert:
#     that:
#       - activemq_admin_password | length > 12
#     quiet: True
#     fail_msg: "The password is empty, invalid, or too weak. Please set the variable to a 16+ char long string"
#     success_msg: "Password OK: {{ item }}"

- name: Clear internal templating variables
  ansible.builtin.set_fact:
    security_settings: []
    security_settings_matches: {}
    management_access_default: []
    management_access_domains: []
    addresses: []
    acceptors: []
    connectors: []
    address_settings: []
    diverts: []
    broker_connections: []
    masked_users: []

- name: Validate credentials
  ansible.builtin.assert:
    that:
      - (rhn_username is defined and amq_broker_enable is defined and amq_broker_enable) or amq_broker_enable is not defined or not amq_broker_enable or activemq_offline_install
      - (rhn_password is defined and amq_broker_enable is defined and amq_broker_enable) or amq_broker_enable is not defined or not amq_broker_enable or activemq_offline_install
    quiet: True
    fail_msg: "Cannot install Red Hat AMQ Broker without RHN credentials. Check rhn_username and rhn_password are defined or use offline installation"
    success_msg: "{{ 'Installing ' + activemq.service_name }}"

- name: Validate TLS config
  ansible.builtin.assert:
    that:
      - activemq_tls_truststore_path is defined
      - activemq_tls_truststore_password is defined
      - activemq_tls_keystore_path is defined
      - activemq_tls_keystore_password is defined
  when: activemq_tls_enabled

- name: Validate TLS mutual auth config
  ansible.builtin.assert:
    that:
      - activemq_tls_truststore_path is defined
      - activemq_tls_truststore_password is defined
      - activemq_tls_keystore_path is defined
      - activemq_tls_keystore_password is defined
      - activemq_tls_enabled
  when: activemq_tls_mutual_authentication

- name: Check local download archive path
  ansible.builtin.stat:
    path: "{{ activemq_local_archive_repository }}"
  register: local_path
  delegate_to: localhost
  run_once: True

- name: Validate local download path
  ansible.builtin.assert:
    that:
      - local_path.stat.exists
    quiet: True
    fail_msg: "Defined controller path for downloading resource is incorrect: {{ activemq_local_archive_repository }}"
    success_msg: "Will download resource to controller path: {{ local_path.stat.path }}"

- name: Retrieve xsd schemas
  block:
    - name: Make collection xsd available for validation
      ansible.builtin.copy: # noqa risky-file-permissions delegated, uses controller host user
        src: "artemis-configuration-{{ activemq_version.split('.')[:2] | join('.') }}.xsd"
        dest: "{{ local_path.stat.path }}/artemis-configuration.xsd"
        mode: 0644
      delegate_to: localhost
      run_once: True
      changed_when: False  # it does not change targets, validation is on controller
    - name: Make collection xml.xsd available for validation
      ansible.builtin.copy: # noqa risky-file-permissions delegated, uses controller host user
        src: "xml.xsd"
        dest: "{{ local_path.stat.path }}/xml.xsd"
        mode: 0644
      delegate_to: localhost
      run_once: True
      changed_when: False  # it does not change targets, validation is on controller
  rescue:
    - name: Fetch artemis configuration xsd schema for requested version
      ansible.builtin.get_url: # noqa risky-file-permissions delegated, uses controller host user
        url: "{{ item }}"
        dest: "{{ local_path.stat.path }}/"
        mode: 0640
      delegate_to: localhost
      changed_when: False  # it does not change targets, validation is on controller
      run_once: True
      retries: 3
      delay: 5
      loop:
        - "{{ activemq.config_xsd }}"
        - https://www.w3.org/2001/03/xml.xsd

- name: Ensure required packages are installed
  ansible.builtin.include_tasks: fastpackages.yml
  vars:
    packages_list: "{{ activemq.package_list }}"
