---
- name: Determine JAVA_HOME for selected JVM RPM
  ansible.builtin.set_fact:
    rpm_java_home: "/etc/alternatives/jre_{{ activemq_jvm_package | regex_search('(?<=java-)[0-9.]+') }}"

- name: "Ensure systemd unit override directory exists"
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ activemq.instance_name }}.d/"
    state: directory
    owner: root
    group: root
    mode: 0755
  become: True

- name: "Configure sysconfig file for {{ activemq.instance_name }} {{ activemq.service_name }} service"
  become: True
  ansible.builtin.template:
    src: amq_broker.sysconfig.j2
    dest: "/etc/sysconfig/{{ activemq.instance_name }}"
    owner: root
    group: root
    mode: 0644
  vars:
    activemq_rpm_java_home: "{{ rpm_java_home }}"
  notify:
    - restart amq_broker

- name: "Configure systemd unit file for {{ activemq.instance_name }} {{ activemq.service_name }} service"
  ansible.builtin.template:
    src: "{{ activemq_service_override_template | default('amq_broker.service.j2', true) }}"
    dest: "/etc/systemd/system/{{ activemq.instance_name }}.service"
    owner: root
    group: root
    mode: 0644
  become: True
  register: systemdunit
  notify:
    - restart amq_broker

- name: "Check instance directory: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.stat:
    path: "{{ activemq_dest }}/{{ activemq.instance_name }}/bin"
  register: instance_directory
  become: True

- name: "Generate artemis configuration for: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.include_tasks: configure_artemis.yml
  when:
    - not instance_directory.stat.exists

- name: "Create instance {{ activemq.instance_name }} of {{ activemq.service_name }}"
  ansible.builtin.command:
    cmd: "{{ activemq.home }}/bin/artemis create {{ activemq.instance_home }} {{ activemq_options }}"
    creates: "{{ activemq.instance_home }}/bin/artemis-service"
  become: True
  become_user: "{{ activemq_service_user }}"
  register: broker_created
  when:
    - not instance_directory.stat.exists
