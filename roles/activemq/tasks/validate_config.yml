---
- name: Clear internal validation variables
  ansible.builtin.set_fact:
    validate_security_settings: []
    validate_security_settings_matches: {}
    validate_management_access_default: []
    validate_management_access_domains: []
    validate_addresses: []
    validate_acceptors: []
    validate_connectors: []
    validate_address_settings: []
    validate_diverts: []
    validate_broker_connections: []
    valid_core_configuration_list: []

- name: Validate configuration/core and journal configuration
  ansible.builtin.include_tasks: validate_core_config.yml
  loop: "{{ activemq_core_configuration_list }}"
  loop_control:
    label: "{{ item }}"

- name: Create address settings configuration string
  ansible.builtin.set_fact:
    validate_address_settings: "{{ validate_address_settings | default([]) + [ lookup('template', 'address_settings.broker.xml.j2') ] }}"
  loop: "{{ activemq_address_settings }}"
  loop_control:
    loop_var: address_setting
    label: "{{ address_setting.match }}"

- name: Validate address settings
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><address-settings>{{ validate_address_settings | join(' ') | trim }}</address-settings></core>"
    validate: yes
    input_type: xml
  run_once: True
  delegate_to: localhost

- name: Create acceptor configuration string
  ansible.builtin.set_fact:
    validate_acceptors: "{{ validate_acceptors | default([]) + [ lookup('template', 'acceptors.broker.xml.j2') ] }}"
  loop: "{{ activemq_acceptors }}"
  loop_control:
    loop_var: acceptor
    label: "{{ acceptor.name }}"
  no_log: True

- name: Validate acceptors
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><acceptors>{{ validate_acceptors | join(' ') | trim }}</acceptors></core>"
    validate: yes
    input_type: xml
  run_once: True
  no_log: True
  delegate_to: localhost

- name: Create final connector list using generated and declared lists
  ansible.builtin.set_fact:
    validate_merged_connectors: "{{ activemq_cluster_nodes | default([]) | middleware_automation.amq.lists_mergeby(\
                          activemq_connectors | default([]), 'name', recursive=True, list_merge='append') }}"

- name: Create connector configuration string
  ansible.builtin.set_fact:
    validate_connectors: "{{ validate_connectors | default([]) + [ lookup('template', 'connectors.broker.xml.j2') ] }}"
  loop: "{{ validate_merged_connectors }}"
  loop_control:
    loop_var: connector
    label: "{{ connector.name }}"
  no_log: True

- name: Validate connectors
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><connectors>{{ validate_connectors | join(' ') | trim }}</connectors></core>"
    validate: yes
    input_type: xml
  run_once: True
  no_log: True
  delegate_to: localhost

- name: Create addresses string
  ansible.builtin.set_fact:
    validate_addresses: "{{ validate_addresses | default([]) + [ lookup('template', 'addresses.broker.xml.j2') ] }}"
  loop: "{{ activemq_addresses }}"
  loop_control:
    loop_var: address
    label: "{{ address.name }}"

- name: Validate addresses
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><addresses>{{ validate_addresses | join(' ') | trim }}</addresses></core>"
    validate: yes
    input_type: xml
  run_once: True
  delegate_to: localhost

- name: Create diverts configuration string
  ansible.builtin.set_fact:
    validate_diverts: "{{ validate_diverts | default([]) + [ lookup('template', 'diverts.broker.xml.j2') ] }}"
  when: activemq_diverts | length > 0
  loop: "{{ activemq_diverts }}"
  loop_control:
    loop_var: divert
    label: "{{ divert.name }}"

- name: Validate diverts
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><diverts>{{ validate_diverts | default([]) | join(' ') | trim }}</diverts></core>"
    validate: yes
    input_type: xml
  when: activemq_diverts | length > 0
  run_once: True
  delegate_to: localhost

- name: Create amqp broker connections configuration string
  ansible.builtin.set_fact:
    validate_broker_connections: "{{ validate_broker_connections | default([]) + [ lookup('template', 'broker_connections.broker.xml.j2') ] }}"
  when: activemq_broker_connections | length > 0
  loop: "{{ activemq_broker_connections }}"
  loop_control:
    loop_var: broker_connection
    label: "{{ broker_connection.name }} - {{ broker_connection.uri }}"

- name: Validate amqp broker connections
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><broker-connections>{{ validate_broker_connections | default([]) | join(' ') | trim }}</broker-connections></core>"
    validate: yes
    input_type: xml
  when: activemq_broker_connections | length > 0
  run_once: True
  delegate_to: localhost

- name: Create security settings matches
  ansible.builtin.set_fact:
    validate_security_settings_matches: "{{ validate_security_settings_matches | default({}) | combine( { match: { item.1: [ item.0.name ] }  }, recursive=True, list_merge='append' ) }}"
  vars:
    match: "{{ item.0.match | default('#') }}"
  loop: "{{ activemq_roles | subelements('permissions') }}"
  loop_control:
    label: "{{ item.0.match | default('#') }}"

- name: Create security settings
  ansible.builtin.set_fact:
    validate_security_settings: "{{ validate_security_settings | default([]) + [ lookup('template', 'security_settings.broker.xml.j2', wantlist=True) ] }}"
  loop: "{{ validate_security_settings_matches | dict2items(key_name='match', value_name='permissions') }}"

- name: Validate security settings
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-configuration.xsd"
    xmlstring: "<core xmlns=\"urn:activemq:core\"><security-settings>{{ validate_security_settings | flatten | join(' ') | trim }}</security-settings></core>"
    validate: yes
    input_type: xml
  run_once: True
  delegate_to: localhost
