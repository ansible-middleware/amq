---
- name: Check prerequisites
  ansible.builtin.include_tasks: prereqs.yml
  tags:
    - prereqs

- name: Create broker cluster node members
  ansible.builtin.set_fact:
    activemq_cluster_nodes: >
      {{ activemq_cluster_nodes | default([]) + [
           {
             "name": item,
             "address": host_address,
             "inventory_host": item,
             "port": host_port,
             "value": "tcp://" + host_address + ":" + host_port
           }
         ] }}
  loop: "{{ ansible_play_batch }}"
  vars:
    host_iface: "{{ 'ansible_' + activemq_cluster_iface }}"
    host_address: "{{ hostvars[item][host_iface]['address'] | default(hostvars[item][host_iface]['ipv4']['address'] | default(activemq.instance_name)) }}"
    host_port: "{{ (((activemq_port | int + activemq_ports_offset | int) | abs) | string) }}"
  when:
    - activemq_ha_enabled or activemq_cluster_enabled
    - activemq_cluster_discovery == "static"

- name: Create broker cluster node members
  ansible.builtin.set_fact:
    activemq_cluster_nodes: "{{ activemq_cluster_connections }}"
  when:
    - activemq_ha_enabled or activemq_cluster_enabled
    - activemq_cluster_discovery == "provided"

- name: Validate broker configuration
  ansible.builtin.include_tasks: validate_config.yml
  when: activemq_config_override_template == ''
  tags:
    - validation

- name: Validate custom broker.xml configuration
  middleware_automation.common.xml:
    xsd_path: "{{ local_path.stat.path }}/artemis-server.xsd"
    xmlstring: "{{ lookup('ansible.builtin.template', activemq_config_override_template) }}"
    validate: true
    input_type: xml
  when: activemq_config_override_template != ''
  run_once: true
  delegate_to: localhost

- name: Include firewall config tasks
  ansible.builtin.include_tasks: firewalld.yml
  when: activemq_configure_firewalld
  tags:
    - firewall

- name: Include install tasks
  ansible.builtin.include_tasks: install.yml
  tags:
    - install

- name: Include systemd tasks
  ansible.builtin.include_tasks: systemd.yml
  tags:
    - systemd

- name: "Check instance directory: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.stat:
    path: "{{ activemq_dest }}/{{ activemq.instance_name }}/bin"
  register: instance_directory
  become: "{{ activemq_install_requires_become | default(true) }}"

- name: "Generate artemis configuration for: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.include_tasks: configure_artemis.yml
  when:
    - not instance_directory.stat.exists

- name: "Create instance {{ activemq.instance_name }} of {{ activemq.service_name }}"
  ansible.builtin.command:
    cmd: "{{ activemq.home }}/bin/artemis create {{ activemq.instance_home }} {{ activemq_options }}"
    creates: "{{ activemq.instance_home }}/bin/artemis-service"
  environment:
    PATH: "{{ rpm_java_home | default(activemq_rpm_java_home, true) }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    JAVA_HOME: "{{ rpm_java_home }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  become_user: "{{ activemq_service_user }}"
  register: broker_created
  when:
    - not instance_directory.stat.exists

- name: "Configure custom broker.xml file for {{ activemq.instance_name }}"
  ansible.builtin.template:
    src: "{{ activemq_config_override_template }}"
    dest: "{{ activemq.instance_home }}/etc/broker.xml"
    owner: "{{ activemq_service_user }}"
    group: "{{ activemq_service_group }}"
    mode: '0644'
  when: activemq_config_override_template != ''
  become: "{{ activemq_install_requires_become | default(true) }}"
  notify:
    - restart amq_broker

- name: "Check instance directory: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.stat:
    path: "{{ activemq_dest }}/{{ activemq.instance_name }}/bin"
  register: instance_directory
  become: "{{ activemq_install_requires_become | default(true) }}"

- name: "Check target directory profile version"
  when:
    - instance_directory is defined
    - instance_directory.stat.exists
  become: "{{ activemq_install_requires_become | default(true) }}"
  block:
    - name: Reset upgrade flag
      ansible.builtin.set_fact:
        needs_upgrade: false
    - name: Read profile file
      ansible.builtin.slurp:
        src: "{{ activemq.instance_home }}/etc/artemis.profile"
      register: profile_file
    - name: Display versions
      ansible.builtin.debug:
        msg: "Requested version: {{ activemq_version }} / current profile: {{ profile_file.content | b64decode | regex_search(\"ARTEMIS_HOME='?.*'?\", multiline=true) }}"
    - name: Set upgrade flag
      ansible.builtin.set_fact:
        needs_upgrade: true
      when: (profile_file.content | b64decode | regex_search("ARTEMIS_HOME='?" + activemq_installdir + "'?", multiline=true)) == None

- name: Include post upgrade tasks
  ansible.builtin.include_tasks: upgrade.yml
  when:
    - instance_directory is defined
    - instance_directory.stat.exists
    - needs_upgrade is defined
    - needs_upgrade

- name: Setup clustering with jgroups
  ansible.builtin.include_tasks: jgroups.yml
  when:
    - activemq_ha_enabled
    - activemq_cluster_discovery == 'jgroups'

- name: Include keystore copy tasks
  ansible.builtin.include_tasks: keystores.yml
  when:
    - activemq_tls_enabled
  tags:
    - keystores

- name: Set additional classpath libs
  when: activemq_additional_libs | length > 0
  block:
    - name: "Create libs location"
      become: "{{ activemq_install_requires_become | default(true) }}"
      ansible.builtin.file:
        dest: "{{ activemq.instance_home }}/lib"
        state: directory
        owner: "{{ activemq_service_user }}"
        group: "{{ activemq_service_group }}"
        mode: '0750'
    - name: "Copy additional libs to location"
      become: "{{ activemq_install_requires_become | default(true) }}"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ activemq.instance_home }}/lib/"
        owner: "{{ activemq_service_user }}"
        group: "{{ activemq_service_group }}"
        mode: '0640'
      loop: "{{ activemq_additional_libs }}"

- name: "Generate broker.xml configuration for: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.include_tasks: configure_broker.yml
  when: activemq_config_override_template == ''

- name: "Generate broker config files for: {{ activemq_dest }}/{{ activemq.instance_name }}"
  ansible.builtin.include_tasks: configure_files.yml

- name: Verify file ownership
  ansible.builtin.command: |
    chown -R {{ activemq_service_user }}:{{ activemq_service_group }} {{ activemq.instance_home }}
  register: chown_status
  changed_when: chown_status.stdout != ""
  become: "{{ activemq_install_requires_become | default(true) }}"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Check service status and start when off
  throttle: 1
  block:
    - name: Check service status
      ansible.builtin.command: "systemctl status {{ activemq.instance_name }}"
      register: activemq_service_status
      become: "{{ activemq_install_requires_become | default(true) }}"
      changed_when: false
      delay: 5
    - name: Verify service status
      ansible.builtin.assert:
        that:
          - activemq_service_status is defined
          - activemq_service_status.stdout is defined
  rescue:
    - name: "Start and wait for {{ activemq.service_name }} service"
      ansible.builtin.include_tasks: start.yml
      run_once: true

- name: Create default logs directory
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    state: directory
    dest: "/var/log/{{ activemq.service_name }}"
    owner: "{{ activemq_service_user }}"
    group: "{{ activemq_service_group }}"
    mode: '0750'

- name: Link default logs directory
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    state: link
    src: "{{ activemq.instance_home }}/log"
    dest: "/var/log/{{ activemq.service_name }}/{{ activemq.instance_name }}"
