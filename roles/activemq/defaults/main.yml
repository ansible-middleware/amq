---
### Version settings
activemq_version: 2.40.0
activemq_archive: "apache-artemis-{{ activemq_version }}-bin.zip"
activemq_download_url: "https://archive.apache.org/dist/activemq/activemq-artemis/{{ activemq_version }}/{{ activemq_archive }}"
activemq_installdir: "{{ activemq_dest }}/apache-artemis-{{ activemq_version }}"
activemq_install_extract_require_privilege_escalation: true

### Install location and service settings
activemq_dest: /opt/amq
activemq_offline_install: false
activemq_config_dir: "conf"
activemq_config_xml: amq-broker.xml
activemq_config_override_template: ''
activemq_service_user: amq-broker
activemq_service_group: amq-broker
activemq_service_user_home: "{{ activemq_dest }}/apache-artemis-{{ activemq_version }}"
activemq_instance_name: amq-broker
activemq_instance_username: amq-broker
activemq_instance_password: amq-broker
activemq_instance_anonymous: false
activemq_service_pidfile: data/artemis.pid
activemq_configure_firewalld: false

### Common configuration settings
activemq_bind_address: 0.0.0.0
activemq_host: localhost
activemq_http_port: 8161
activemq_console_bind_url: "http{{ 's' if activemq_tls_enabled else '' }}://{{ activemq_bind_address }}:{{ activemq_http_port }}"
activemq_console_url: "{{ activemq_console_bind_url }}/console/"
activemq_jolokia_url: "{{ activemq_console_url }}jolokia"
activemq_configuration_file_refresh_period: 5000
activemq_jvm_package: java-17-openjdk-headless
activemq_java_home:
activemq_java_opts: "{{ [
   activemq_java_opts_mem,
   activemq_java_opts_gc,
   activemq_java_opts_hawtio,
   '-Djolokia.policyLocation=file:' + activemq_dest + '/' + activemq_instance_name + '/etc/jolokia-access.xml',
   activemq_java_opts_extra | default('')
 ] | join(' ') }}"
activemq_java_opts_extra: ''
activemq_java_opts_mem: '-Xms512M -Xmx2G'
activemq_java_opts_gc: '-XX:+PrintClassHistogram -XX:+UseG1GC -XX:+UseStringDeduplication'
activemq_java_opts_hawtio: '-Dhawtio.disableProxy=true -Dhawtio.authenticationThrottled=false -Dhawtio.realm=activemq -Dhawtio.offline=true -Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal'
activemq_port: 61616        # for protocols [CORE,MQTT,AMQP,STOMP,HORNETQ,OPENWIRE]
activemq_port_hornetq: 5445 # for protocols [HORNETQ,STOMP]
activemq_port_amqp: 5672    # for protocols [AMQP]
activemq_port_mqtt: 1883    # for protocols [MQTT]
activemq_port_stomp: 61613  # for protocols [STOMP]
activemq_name: 'Apache ActiveMQ'
activemq_service_name: activemq
activemq_service_override_template: ''
activemq_modular_configuration: false
activemq_schema_src: "{{ activemq_installdir }}/schema/activemq.xsd"

### Enable configuration for clustering / high availability
activemq_ha_enabled: false
activemq_cluster_enabled: "{{ activemq_ha_enabled }}"
activemq_cluster_user: amq-cluster-user
activemq_cluster_pass: amq-cluster-pass
activemq_cluster_maxhops: 1
activemq_cluster_lb_policy: 'ON_DEMAND'
activemq_cluster_iface: default_ipv4
activemq_replication: false
activemq_replicated: false
## cluster discovery: >
# 'jgroups' for shared file ping, 'multicast' for UDP multicast
# 'static' for static declaration + ansible_play_hosts
# 'provided' for using activemq_cluster_connections only (for federation keep the list empty)
activemq_cluster_discovery: static
activemq_cluster_connections: []
activemq_scale_down_enabled: false
activemq_systemd_wait_for_port: "{{ activemq_ha_enabled and not activemq_shared_storage }}"
activemq_systemd_wait_for_log: "{{ activemq_ha_enabled and activemq_shared_storage }}"
activemq_systemd_wait_for_timeout: 60
activemq_systemd_wait_for_delay: 10
activemq_systemd_wait_for_log_ha_string: 'AMQ221109\\\\|AMQ221001\\\\|AMQ221034'
activemq_systemd_wait_for_log_string: 'AMQ221034'
activemq_systemd_wait_for_port_number: "{{ activemq_port }}"
activemq_systemd_expand_environment: false
activemq_ha_role: live-only
activemq_ha_allow_failback: true
activemq_ha_failover_on_shutdown: true
activemq_ha_backup_failover_on_shutdown: false
activemq_ha_restart_backup: false
activemq_ha_check_for_active_server: "{{ activemq_replication }}"
activemq_ha_replication_cluster_name: ''
activemq_ha_replication_group_name: ''
activemq_ha_vote_on_replication_failure: false
activemq_ha_quorum_size: -1

### Masked passwords
activemq_password_codec: 'org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec'
activemq_mask_password: true
activemq_mask_password_hashname: sha1
activemq_mask_password_iterations: 1024

### JAAS
activemq_auth_properties_enabled: true
activemq_auth_template: login.config.j2
### LDAP authn
activemq_auth_ldap_enabled: false
activemq_auth_ldap_url: ldap://localhost:389
activemq_auth_ldap_conn_username: uid=admin,ou=system
activemq_auth_ldap_conn_password: password
activemq_auth_ldap_conn_codec: "{{ activemq_password_codec }}"
activemq_auth_ldap_conn_protocol: s
activemq_auth_ldap_auth: simple
activemq_auth_ldap_user_base: ou=Users,dc=example,dc=com
activemq_auth_ldap_user_search: '(uid={0})'
activemq_auth_ldap_user_search_subtree: true
activemq_auth_ldap_role_base: ou=Groups,dc=example,dc=com
activemq_auth_ldap_role_name: cn
activemq_auth_ldap_role_search: '(member={0})'
activemq_auth_ldap_role_search_subtree: false
activemq_auth_ldap_referral: ignore
activemq_auth_ldap_expand_roles: false
activemq_auth_ldap_expand_roles_matching: '(member={0})'

## Additional classpath
activemq_additional_libs: []

### Enable persistence and persistence options
activemq_persistence_enabled: true
activemq_persist_id_cache: true
activemq_id_cache_size: 20000
# file journal configuration
# journal type, valid values are [ ASYNCIO: libaio, MAPPED: mmap files, NIO: Plain Java Files  ]
activemq_journal_type: ASYNCIO
activemq_data_directory: "{{ activemq_shared_storage_path if activemq_shared_storage else activemq_dest + '/' + activemq_instance_name  + '/data' }}"
activemq_paging_directory: "{{ activemq_data_directory }}/paging"
activemq_bindings_directory: "{{ activemq_data_directory }}/bindings"
activemq_journal_directory: "{{ activemq_data_directory }}/journal"
activemq_large_messages_directory: "{{ activemq_data_directory }}/largemessages"
activemq_journal_datasync: true
activemq_journal_min_files: 2
activemq_journal_pool_files: 10
activemq_journal_device_block_size: 4096
activemq_journal_file_size: 10M
activemq_journal_buffer_timeout: "{{ 500000 if activemq_journal_type == 'ASYNCIO' else 3333333 }}"
activemq_journal_buffer_size: '490KiB'
activemq_disk_scan_period: 5000
activemq_max_disk_usage: 96
activemq_journal_max_io: "{{ 4096 if activemq_journal_type == 'ASYNCIO' else 1 }}"
# message Full Policy configured
activemq_global_max_messages: -1
activemq_global_max_size: '-1'
# database configuration for JDBC persistence
activemq_db_enabled: false
activemq_db_jdbc_url: 'jdbc:derby:target/derby/database-store;create=true'
activemq_db_bindings_table: BINDINGS_TABLE
activemq_db_message_table: MESSAGE_TABLE
activemq_db_large_message_table: LARGE_MESSAGES_TABLE
activemq_db_jdbc_driver_class: org.apache.derby.jdbc.EmbeddedDriver
# critical analyzer
activemq_critical_analyzer: true
activemq_critical_analyzer_timeout: 120000
activemq_critical_analyzer_check_period: 60000
activemq_critical_analyzer_policy: LOG

### Enable TLS
activemq_tls_enabled: false
activemq_tls_keystore_path:
activemq_tls_keystore_password:
activemq_tls_keystore_dest: "{{ activemq_dest }}/{{ activemq_instance_name }}/etc/identity.ks"

# Mutual authentication (requires TLS)
activemq_tls_mutual_authentication: false
activemq_tls_truststore_path:
activemq_tls_truststore_password:
activemq_tls_truststore_dest: "{{ activemq_dest }}/{{ activemq_instance_name }}/etc/trust.ks"

# Users
# list of users the create, user is not created if password empty; list of (user,password,roles) dicts
# .roles is a list of activemq_roles.name
activemq_users:
  - user: "{{ activemq_instance_username }}"
    password: "{{ activemq_instance_password }}"
    roles: [ amq ]

# Roles
# .permissions is subset of:
# [ createNonDurableQueue, deleteNonDurableQueue, createDurableQueue, deleteDurableQueue, createAddress, deleteAddress, consume, browse, send, manage ]
activemq_roles:
  - name: amq
    match: '#'
    permissions: [ createNonDurableQueue, deleteNonDurableQueue, createDurableQueue, deleteDurableQueue, createAddress, deleteAddress, consume, browse, send, manage ]

# fine grained management console accesses methods and roles, `activemq_hawtio_roles` roles will be added to each access
activemq_management_access_default:
  - methods: [ 'list*', 'get*', 'is*', 'set*', 'browse*', 'count*', '*' ]
    roles: "{{ activemq_hawtio_roles }}"


# fine grained management console accesses methods and roles per domain and key, `activemq_hawtio_roles` will be added to each domain access
activemq_management_access_domains:
  - name: org.apache.activemq.artemis
    accesses:
      - methods: [ 'list*', 'get*', 'is*', 'set*', 'browse*', 'count*', '*' ]
        roles: "{{ activemq_hawtio_roles }}"
  - name: java.lang
    accesses:
      - methods: [ 'list*', 'get*', 'is*', 'set*', '*' ]
        roles: "{{ activemq_hawtio_roles }}"

# Jolokia
activemq_hawtio_role: amq  ## DEPRECATED, use activemq_hawtio_roles
activemq_hawtio_roles: "{{ activemq_hawtio_role.split(',') }}"
activemq_cors_allow_origin: [ '*://0.0.0.0*' ]
activemq_cors_strict_checking: true

# NIO option
activemq_nio_enabled: false

## Shared Storage
activemq_shared_storage: false
activemq_shared_storage_mounted: true
activemq_shared_storage_path: "{{ activemq_dest }}/{{ activemq_instance_name }}/data/shared"

## Ports
activemq_ports_offset_enabled: false
activemq_ports_offset: 0

# Queues
activemq_disable_destination_autocreate: true
activemq_queues: queue.in,queue.out

# Protocol disablement
activemq_disable_amqp_protocol: false
activemq_disable_hornetq_protocol: false
activemq_disable_mqtt_protocol: false
activemq_disable_stomp_protocol: false

# Logging
activemq_enable_audit: false
activemq_logger_level: INFO
activemq_logger_core_server_level: INFO
activemq_logger_journal_level: INFO
activemq_logger_utils_level: INFO
activemq_logger_utils_critical_level: INFO
activemq_logger_jms_level: INFO
activemq_logger_integration_bootstrap_level: INFO
activemq_logger_jetty_level: WARN
activemq_logger_curator_level: WARN
activemq_logger_zookeeper_level: ERROR
activemq_logger_config_template: "{{ 'log4j2.properties' if activemq_version is version_compare('2.27.0', '>=') else 'logging.properties' }}.j2"
activemq_logger_config_template_path: ''
activemq_logger_config_keep_name: false
activemq_logger_rollover_files: 5
activemq_logger_audit_rollover_files: 5
activemq_logger_filepath: /log/artemis.log
activemq_logger_max_file_size: 104857600  # 100MB in bytes
activemq_logger_audit_max_file_size: 52428800  # 50MB in bytes
activemq_logger_cron_eval_on_startup: true
activemq_logger_audit_cron_eval_on_startup: true

# Metrics
activemq_jmx_exporter_port: 18080
activemq_jmx_exporter_config_path: "{{ activemq_dest }}/{{ activemq_instance_name }}/etc/jmx_exporter.yml"
activemq_jmx_exporter_enabled: false
activemq_jmx_exporter_package: prometheus-jmx-exporter-openjdk11
activemq_prometheus_enabled: false

### Contoller defaults
activemq_local_archive_repository: "{{ lookup('env', 'PWD') }}"

### Acceptors configuration
activemq_acceptors:
  - name: artemis
    scheme: tcp
    bind_address: "{{ activemq_host }}"
    bind_port: "{{ activemq_port }}"
    parameters:
      tcpSendBufferSize: 1048576
      tcpReceiveBufferSize: 1048576
      amqpMinLargeMessageSize: 102400
      protocols: CORE,AMQP,STOMP,HORNETQ,MQTT,OPENWIRE
      useEpoll: true
      amqpCredits: 1000
      amqpLowCredits: 300
      amqpDuplicateDetection: true
      supportAdvisory: false
      suppressInternalManagementObjects: false
  - name: amqp
    scheme: tcp
    bind_address: "{{ activemq_host }}"
    bind_port: "{{ activemq_port_amqp }}"
    parameters:
      tcpSendBufferSize: 1048576
      tcpReceiveBufferSize: 1048576
      protocols: AMQP
      useEpoll: true
      amqpMinLargeMessageSize: 102400
      amqpCredits: 1000
      amqpLowCredits: 300
      amqpDuplicateDetection: true
  - name: stomp
    scheme: tcp
    bind_address: "{{ activemq_host }}"
    bind_port: "{{ activemq_port_stomp }}"
    parameters:
      tcpSendBufferSize: 1048576
      tcpReceiveBufferSize: 1048576
      protocols: STOMP
      useEpoll: true
  - name: hornetq
    scheme: tcp
    bind_address: "{{ activemq_host }}"
    bind_port: "{{ activemq_port_hornetq }}"
    parameters:
      anycastPrefix: jms.queue.
      multicastPrefix: jms.topic.
      protocols: HORNETQ,STOMP
      useEpoll: true
  - name: mqtt
    scheme: tcp
    bind_address: "{{ activemq_host }}"
    bind_port: "{{ activemq_port_mqtt }}"
    parameters:
      tcpSendBufferSize: 1048576
      tcpReceiveBufferSize: 1048576
      protocols: MQTT
      useEpoll: true

### Connectors configuration
activemq_connectors:
  - name: artemis
    scheme: tcp
    address: localhost
    port: "{{ activemq_port }}"

### Addresses configuration
activemq_addresses:
  - name: queue.in
    anycast:
      - name: queue.in
  - name: queue.out
    anycast:
      - name: queue.out
  - name: DLQ
    anycast:
      - name: DLQ
  - name: ExpiryQueue
    anycast:
      - name: ExpiryQueue

### Address settings configuration
activemq_address_settings:
  - match: activemq.management#
    parameters:
      dead_letter_address: DLQ
      expiry_address: ExpiryQueue
      redelivery_delay: 0
      max_size_bytes: -1
      message_counter_history_day_limit: 10
      address_full_policy: PAGE
      auto_create_queues: true
      auto_create_addresses: true
      auto_create_jms_queues: true
      auto_create_jms_topics: true
  - match: '#'
    parameters:
      dead_letter_address: DLQ
      expiry_address: ExpiryQueue
      redelivery_delay: 0
      max_size_bytes: -1
      message_counter_history_day_limit: 10
      address_full_policy: PAGE
      auto_create_queues: false
      auto_create_addresses: false
      auto_create_jms_queues: false
      auto_create_jms_topics: false
      auto_delete_queues: false
      auto_delete_addresses: false

### Divert configuration
activemq_diverts: []

### Broker connections configuration
activemq_broker_connections: []

activemq_federations: []

### Property file name, in playbook lookup paths
# see: https://activemq.apache.org/components/artemis/documentation/latest/configuration-index.html#broker-properties
activemq_properties_file: ''

### Pinging the network
# see: https://activemq.apache.org/components/artemis/documentation/latest/network-isolation.html#pinging-the-network
activemq_network_check_enabled: false
activemq_network_check_period: 10000
activemq_network_check_timeout: 1000
activemq_network_check_list: '' # this is comma separated list, no spaces, just DNS or IPs
activemq_network_check_NIC: '' # noqa var-naming[pattern] # the network card to use for network checking
activemq_network_check_ping_command: ''
activemq_network_check_ping6_command: ''

### Message counter
activemq_message_counter_enabled: false
activemq_message_counter_sample_period: 10000
activemq_message_counter_max_day_history: 10

### Broker Plugins
# see: https://activemq.apache.org/components/artemis/documentation/latest/broker-plugins.html
# list of dicts: { class_name, properties(dict) }
activemq_broker_plugins: []
