---
### AMQ Version settings
# setting for apache activemq artemis
amq_broker_activemq_version: 2.18.0
amq_broker_activemq_archive: "apache-artemis-{{ amq_broker_activemq_version }}-bin.zip"
amq_broker_activemq_download_url: "https://archive.apache.org/dist/activemq/activemq-artemis/{{ amq_broker_activemq_version }}/{{ amq_broker_activemq_archive }}"  
amq_broker_activemq_installdir: "{{ amq_broker_dest }}/apache-artemis-{{ amq_broker_activemq_version }}"
# settings for Red Hat AMQ Broker
amq_broker_enable: "{{ True if rhn_username is defined and rhn_password is defined else False }}"
amq_broker_version: 7.9.4
amq_broker_archive: "amq-broker-{{ amq_broker_version }}-bin.zip"
amq_broker_installdir: "{{ amq_broker_dest }}/amq-broker-{{ amq_broker_version }}"

### Install location and service settings
amq_broker_dest: /opt/amq
amq_broker_offline_install: False
amq_broker_config_dir: "conf"
amq_broker_config_xml: amq-broker.xml
amq_broker_config_override_template: ''
amq_broker_service_user: amq-broker
amq_broker_service_group: amq-broker
amq_broker_instance_name: amq-broker
amq_broker_instance_username: amq-broker
amq_broker_instance_password: amq-broker
amq_broker_instance_anonymous: False
amq_broker_service_pidfile: data/artemis.pid
amq_broker_configure_firewalld: False

### Common configuration settings
amq_broker_bind_address: 0.0.0.0
amq_broker_host: localhost
amq_broker_http_port: 8161
amq_broker_jolokia_url: "http://{{ amq_broker_host }}:{{ amq_broker_http_port }}/console/jolokia"
amq_broker_console_url: "http://{{ amq_broker_host }}:{{ amq_broker_http_port }}/console/"
amq_broker_jvm_package: java-11-openjdk-headless
amq_broker_java_home:
amq_broker_java_opts: "-Xms1024m -Xmx2048m"
amq_broker_port: 61616        # for protocols [CORE,MQTT,AMQP,STOMP,HORNETQ,OPENWIRE]
amq_broker_port_hornetq: 5445 # for protocols [HORNETQ,STOMP]
amq_broker_port_amqp: 5672    # for protocols [AMQP]
amq_broker_port_mqtt: 1883    # for protocols [MQTT]
amq_broker_port_stomp: 61613  # for protocols [STOMP]

### Enable configuration for high availability
amq_broker_ha_enabled: False
amq_broker_cluster_user: amq-cluster-user
amq_broker_cluster_pass: amq-cluster-pass
amq_broker_cluster_maxhops: 1
amq_broker_cluster_lb_policy: ON_DEMAND
amq_broker_replicate: False
amq_broker_replicated: False
# cluster discovery: ['jgroups' for shared file ping, 'multicast' for UDP multicast, 'static' for static declaration]
amq_broker_cluster_discovery: static

### Enable database configuration for JDBC persistence
amq_broker_db_enabled: False

### Enable TLS
amq_broker_tls_enabled: False
amq_broker_tls_keystore_path: identity.ks
amq_broker_tls_keystore_password: changeme
amq_broker_tls_keystore_dest: "{{ amq_broker_dest }}/{{ amq_broker_instance_name }}/etc/identity.ks"

# Mutual authentication (requires TLS)
amq_broker_tls_mutual_authentication: False
amq_broker_tls_truststore:
amq_broker_tls_truststore_password:
amq_broker_tls_truststore_dest: "{{ amq_broker_dest }}/{{ amq_broker_instance_name }}/etc/trust.ks"

# NIO option
amq_broker_nio_enabled: False

## Shared Storage
amq_broker_shared_storage: False
amq_broker_shared_storage_path: data/shared

## Ports
amq_broker_ports_offset_enabled: False
amq_broker_ports_offset: 0

# Queues
amq_broker_disable_destination_autocreate: True
amq_broker_queues: queue.in,queue.out

# Protocol disablement
amq_broker_disable_amqp_protocol: False
amq_broker_disable_hornetq_protocol: False
amq_broker_disable_mqtt_protocol: False
amq_broker_disable_stomp_protocol: False
